{"version":3,"sources":["components/SearchBar.js","components/DisplayInformation.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","state","searchItem","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","onSubmitSearch","className","onSubmit","this","type","name","placeholder","onChange","React","Component","DisplayInformation","imgImage","images","map","image","src","urls","regular","alt","description","id","App","search","a","axios","get","params","query","headers","Authorization","response","data","results","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAsCeA,E,4MAhCXC,MAAQ,CAACC,WAAY,I,EAErBC,cAAgB,SAACC,GAChB,EAAKC,SAAS,CAACH,WAAYE,EAAME,OAAOC,S,EAKzCC,aAAe,SAACJ,GACfA,EAAMK,iBACN,EAAKC,MAAMC,eAAe,EAAKV,MAAMC,a,uDAMzC,OAAO,qBAAKU,UAAU,iBAAf,SACD,uBAAMC,SAAUC,KAAKN,aAArB,UAEC,2CACA,uBAAOO,KAAK,OAAOC,KAAK,SAASC,YAAY,oBAAoBV,MAAOO,KAAKb,MAAMC,WAAYgB,SAAUJ,KAAKX,gBAC9G,uBAAOY,KAAK,oB,GAtBII,IAAMC,WCgBfC,EAjBY,SAACX,GAExB,IAAMY,EAAWZ,EAAMa,OAAOC,KAAI,SAACC,GAEhC,OAAO,qBAAoBC,IAAKD,EAAME,KAAKC,QAASC,IAAKJ,EAAMK,aAA9CL,EAAMM,OAK7B,OAEG,qBAAKnB,UAAU,oBAAf,SAAoCU,K,iBC0BzBU,G,kNAjCT/B,MAAO,CAACsB,OAAQ,I,EAElBZ,e,uCAAiB,WAAMsB,GAAN,eAAAC,EAAA,sEAEQC,IAAMC,IAAI,yCAAyC,CAExEC,OAAO,CAACC,MAAOL,GACfM,QAAQ,CAENC,cAAc,2DAPH,OAETC,EAFS,OAYf,EAAKpC,SAAS,CAACkB,OAAQkB,EAASC,KAAKC,UAZtB,2C,6GAoBjB,OACE,sBAAK/B,UAAU,MAAf,UACG,cAAC,EAAD,CAAWD,eAAgBG,KAAKH,iBAChC,uBACA,cAAC,EAAD,CAAoBY,OAAQT,KAAKb,MAAMsB,gB,GA5B9BJ,IAAMC,YCMTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78fbb604.chunk.js","sourcesContent":["import React from \"react\"\n\n\n\n\nclass SearchBar extends React.Component{\n    state = {searchItem: \"\"}\n\n    onInputChange = (event)=>{\n     this.setState({searchItem: event.target.value})\n    \n\n    }\n\n    onFormSubmit = (event)=>{\n     event.preventDefault()\n     this.props.onSubmitSearch(this.state.searchItem)\n\n    }\n    \nrender(){\n\n return(<div className=\"search-content\">\n       <form onSubmit={this.onFormSubmit}>\n\n        <label>Search</label>\n        <input type=\"text\" name=\"search\" placeholder=\"Enter Your Search\" value={this.state.searchItem} onChange={this.onInputChange}/>\n        <input type=\"Submit\"/>\n        \n       </form>\n       \n </div>\n )\n\n}\n\n}\n\nexport default SearchBar ","import React from \"react\"\n\n\n\nconst DisplayInformation = (props)=>{\n   \n    const imgImage = props.images.map((image)=> {\n\n       return <img key={image.id} src={image.urls.regular} alt={image.description}/>\n     \n\n    })\n\n return (\n    \n    <div className=\"container-content\">{imgImage}</div>\n    \n    )\n\n}\n\nexport default DisplayInformation","import React from \"react\"\nimport SearchBar from \"./components/SearchBar\"\nimport DisplayInformation from \"./components/DisplayInformation\"\nimport axios from \"axios\"\nimport './App.css';\n//Handle fetch request from this component\nclass App extends React.Component {\n     \n      state ={images: []}\n\n    onSubmitSearch = async(search)=>{\n         \n      const response = await axios.get(\"https://api.unsplash.com/search/photos\",{\n       \n        params:{query: search},\n        headers:{\n          \n          Authorization:\"Client-ID O0eLxffRLJOk5iTIaZDvBAoSCQsL5S7Z_5FoBoXu_3I\"\n\n        }\n      });\n      \n      this.setState({images: response.data.results})\n\n    }\n    \n   \n  render(){\n\n\n    return (\n      <div className=\"App\">\n         <SearchBar onSubmitSearch={this.onSubmitSearch}/>\n         <hr/>\n         <DisplayInformation images={this.state.images}/>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}